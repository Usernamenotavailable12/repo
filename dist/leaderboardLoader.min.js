function maskUsername(e,t,r){return!e||e.length<=2||r&&r===t?e:e[0]+"*****"+e[e.length-1]}class FullLeaderboardTable{leaderboardsInfo=[];parrentElement=null;leaderboardButtonsBox=null;leaderboardBody=null;leaderboardTable=null;leaderboardsData=new Map;userData=new Map;leaderboardTableWebSocket=null;outComponent=null;loading=!0;spinner=null;currentUserInfo={id:null,nickname:null};locale="en";constructor(e,t){this.leaderboardsInfo=e?.ldArray,this.outComponent=e.outComponent,this.parrentElement=t,this.currentUserInfo.id=extractAuthDataFromCookie()?.userId,this.currentUserInfo.tokken=extractAuthDataFromCookie()?.accessToken,this.locale=document.documentElement.getAttribute("lang")||"en",this.getAllData();this.parrentElement.innerHTML='\n      <style>\n      mat-spinner {\n          background-size: contain !important;\n          background-repeat: no-repeat !important;\n          background-image: url("https://images.takeshape.io/5da2b4d5-59f6-412a-82c3-f6a272b532be/dev/aaeef128-13e0-4317-a4e9-815bb063ebbd/spinner-logo-2-bat.png") !important;\n      }\n          #leaderboardLoader{\n  position: relative;\n  min-height: 200px;\n}\n      .mat-loader {\n          display: none;\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          z-index: 1000;\n      }\n         .loader {\n          width: 90px;\n          aspect-ratio: 1;\n          border-radius: 50%;\n          border: 8px solid #bf307c;\n          animation:\n              l20-1 1.2s infinite linear alternate,\n              l20-2 2.4s infinite linear;\n          }\n\n          @keyframes l20-1 {\n          0%    {clip-path: polygon(50% 50%, 0 0, 50% 0%, 50% 0%, 50% 0%, 50% 0%, 50% 0%);}\n          12.5% {clip-path: polygon(50% 50%, 0 0, 50% 0%, 100% 0%, 100% 0%, 100% 0%, 100% 0%);}\n          25%   {clip-path: polygon(50% 50%, 0 0, 50% 0%, 100% 0%, 100% 100%, 100% 100%, 100% 100%);}\n          50%   {clip-path: polygon(50% 50%, 0 0, 50% 0%, 100% 0%, 100% 100%, 50% 100%, 0% 100%);}\n          62.5% {clip-path: polygon(50% 50%, 100% 0, 100% 0%, 100% 0%, 100% 100%, 50% 100%, 0% 100%);}\n          75%   {clip-path: polygon(50% 50%, 100% 100%, 100% 100%, 100% 100%, 100% 100%, 50% 100%, 0% 100%);}\n          100%  {clip-path: polygon(50% 50%, 50% 100%, 50% 100%, 50% 100%, 50% 100%, 50% 100%, 0% 100%);}\n          }\n\n          @keyframes l20-2 { \n          0%    {transform: scaleY(1) rotate(0deg);}\n          49.99% {transform: scaleY(1) rotate(135deg);}\n          50%   {transform: scaleY(-1) rotate(0deg);}\n          100%  {transform: scaleY(-1) rotate(-135deg);}\n          }\n\n          .leaderboard-table-row {\n              opacity: 1;\n              transition: opacity 0.3s ease;\n          }\n\n\n      </style>\n                  <div class="leaderboard-table-main" style="display:none;">\n                      <div class="leaderboard-header">\n                          <div class="leaderboard-buttons-box">\n                          </div>\n                      </div>\n                      <div class="leaderboard-body"></div>\n              ',this.parrentElement.innerHTML+='\n              <mat-spinner class="mat-loader" style="display: inline-block;">\n                  <div class=" loader">   \n                  </mat-spinner> \n                  ',this.parrentElement.innerHTML+="</div>",this.leaderboardTable=this.parrentElement.querySelector(".leaderboard-table-main"),this.leaderboardButtonsBox=this.parrentElement.querySelector(".leaderboard-buttons-box"),this.leaderboardHeader=this.parrentElement.querySelector(".leaderboard-header"),this.leaderboardBody=this.parrentElement.querySelector(".leaderboard-body");const r=document.createElement("button");r.innerHTML='<?xml version="1.0" encoding="iso-8859-1"?>\n\x3c!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --\x3e\n<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" \n   viewBox="0 0 330 330" xml:space="preserve" style="transform: scaleX(-1);">\n<path id="XMLID_222_" d="M250.606,154.389l-150-149.996c-5.857-5.858-15.355-5.858-21.213,0.001\n  c-5.857,5.858-5.857,15.355,0.001,21.213l139.393,139.39L79.393,304.394c-5.857,5.858-5.857,15.355,0.001,21.213\n  C82.322,328.536,86.161,330,90,330s7.678-1.464,10.607-4.394l149.999-150.004c2.814-2.813,4.394-6.628,4.394-10.606\n  C255,161.018,253.42,157.202,250.606,154.389z"/>\n</svg>',r.classList.add("leaderboard-header-left-scroll-button"),r.classList.add("leaderboard-header-scroll-button"),r.addEventListener("click",(()=>this.scrollButtonsLeft()));const n=document.createElement("button");n.innerHTML='<?xml version="1.0" encoding="iso-8859-1"?>\n\x3c!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools --\x3e\n<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" \n viewBox="0 0 330 330" xml:space="preserve">\n<path id="XMLID_222_" d="M250.606,154.389l-150-149.996c-5.857-5.858-15.355-5.858-21.213,0.001\nc-5.857,5.858-5.857,15.355,0.001,21.213l139.393,139.39L79.393,304.394c-5.857,5.858-5.857,15.355,0.001,21.213\nC82.322,328.536,86.161,330,90,330s7.678-1.464,10.607-4.394l149.999-150.004c2.814-2.813,4.394-6.628,4.394-10.606\nC255,161.018,253.42,157.202,250.606,154.389z"/>\n</svg>',n.classList.add("leaderboard-header-right-scroll-button"),n.classList.add("leaderboard-header-scroll-button"),n.addEventListener("click",(()=>this.scrollButtonsRight())),this.leaderboardHeader.appendChild(r),this.leaderboardHeader.appendChild(this.leaderboardButtonsBox),this.leaderboardHeader.appendChild(n),this.drawLeaderboardHeader()}destroy(){this.leaderboardTableWebSocket.close(),this.parrentElement.removeChild(this.parrentElement.querySelector(".leaderboard-table-main")),this.leaderboardTableWebSocket=null}async getAllData(){try{let e=Date.now();this.currentUserInfo.id&&this.getUserNickname(this.currentUserInfo.id);for(const t of this.leaderboardsInfo){const r=this.getTournamentData(t.id,t.count,e),n=this.currentUserInfo.id?this.getUserData(t.id,this.currentUserInfo.id,e):Promise.resolve(null),[a,o]=await Promise.all([r,n]);this.drawTableHeaderButton(t.id,a),this.drawLeaderboardBody(a,o,t.id)}this.leaderboardsInfo.length<=1&&(this.leaderboardHeader.style.display="none")}catch(e){console.error("Error in getAllData:",e)}finally{this.setLoading(!1),this.updateLeaderboards(),this.createWebSocket(),this.makeElementDraggable(document.getElementsByClassName("leaderboard-buttons-box")[0],{speedMultiplier:1,enableTouch:!0,dragCursor:"grabbing"});(e=>e.scrollWidth>e.clientWidth)(document.getElementsByClassName("leaderboard-buttons-box")[0])||Array.from(document.getElementsByClassName("leaderboard-header-scroll-button")).forEach((e=>{e.style.display="none"}))}}scrollButtonsRight(){if(!this.leaderboardButtonsBox)return;const e=Array.from(this.leaderboardButtonsBox.children);if(0===e.length)return;getComputedStyle(this.leaderboardButtonsBox).getPropertyValue("--gap-between-buttons");const t=e[0].offsetWidth,r=this.leaderboardButtonsBox.scrollLeft+30;this.smoothScrollTo(this.leaderboardButtonsBox,r+t)}scrollButtonsLeft(){if(!this.leaderboardButtonsBox)return;const e=Array.from(this.leaderboardButtonsBox.children);if(0===e.length)return;getComputedStyle(this.leaderboardButtonsBox).getPropertyValue("--gap-between-buttons");const t=e[0].offsetWidth,r=this.leaderboardButtonsBox.scrollLeft-30;this.smoothScrollTo(this.leaderboardButtonsBox,Math.max(0,r-t))}smoothScrollTo(e,t,r=500){const n=e.scrollLeft,a=t-n;let o=null;requestAnimationFrame((function t(s){null===o&&(o=s);const i=s-o,d=Math.min(i/r,1),l=d*(2-d);e.scrollLeft=n+a*l,i<r&&requestAnimationFrame(t)}))}async getTournamentData(e,t,r){try{const n="query TournamentConnection( $tournamentId: ID $status: [TournamentStatus!] $first: Int $orderBy: [UserTournamentOrderByInput!] ) { tournamentConnection(tournamentId: $tournamentId, status: $status) { edges { node { actions { action { ... on GiveBonusAction { bonus { reward { ... on FreespinsBonusReward { amount type } } } } ... on GiveAndActivateBonusAction { bonus { reward { ... on FixedBonusReward { type amounts { value } } } } } ... on GiveBoxAction { box { type description } } ... on CreateTicketAction { title } ... on GiveLoyaltyPointsAction { amount currencyCode } } } endsAt startsAt userTournamentConnection(first: $first, orderBy: $orderBy) { edges { node { position points user { userId nickname avatarUri } } } } } } } }",a={tournamentId:e,status:["ACTIVE","FINISHED","PREPARING"],orderBy:[{field:"points",direction:"DESCENDING"}],first:t,_nonce:r},o=await this.executeGraphQLQuery(n,a),s=o?.data?.tournamentConnection?.edges?.[0]?.node;if(!s)return console.warn("Tournament data is missing for leaderboardId:",e),null;const i={usersData:s.userTournamentConnection.edges,rewardsData:s.actions,endsAt:s.endsAt,startsAt:s.startsAt};return this.leaderboardsData.set(e,i),i}catch(e){return console.error("Error fetching tournament data:",e),null}}async getUserData(e,t,r){try{const n="\n              query UserTournamentConnection($userId: ID, $tournamentId: ID) {\n                  userTournamentConnection(userId: $userId, tournamentId: $tournamentId) {\n                      edges {\n                          node {\n                              points\n                              position\n                          }\n                      }\n                  }\n              }\n          ",a={tournamentId:e,userId:t,_nonce:r},o=await this.executeGraphQLQuery(n,a),s=o?.data?.userTournamentConnection?.edges?.[0]?.node;if(!s)return console.warn("User data is missing for userId:",t,"in leaderboard:",e),null;const i={points:s.points,position:s.position,isWinner:null};return this.userData.set(e,i),i}catch(e){return console.error("Error fetching user data:",e),null}}async getUserNickname(e){const t={userId:e};try{const e=await this.executeGraphQLQuery("query User($userId: ID!) {\n          user(userId: $userId) {\n              nickname\n              avatarUri\n          }\n      }",t);this.currentUserInfo.nickname=e?.data?.user?.nickname,this.currentUserInfo.avatarUri=e?.data?.user?.avatarUri||null}catch(e){console.error("Error fetching user nickname:",e)}}async createWebSocket(){const e=new WebSocket("wss://www.ambassadoribet.com/_internal/ws/default/default/");this.leaderboardTableWebSocket=e;const t={connection_ack:()=>this.sendSubscriptions(),data:e=>this.handleSubscriptionData(e)};e.addEventListener("open",(()=>{e.send(JSON.stringify({type:"connection_init",payload:{}}))})),e.addEventListener("message",(e=>{const r=JSON.parse(e.data),n=t[r.type];n&&n(r)})),e.addEventListener("error",(e=>{console.error("WebSocket error:",e)}))}async sendSubscriptions(){this.leaderboardsInfo.map((e=>({tournamentId:e.id}))).forEach((e=>{this.leaderboardTableWebSocket.send(JSON.stringify({id:e.tournamentId,type:"start",payload:{query:"\n                  subscription TournamentUpdatedEx($tournamentId: ID) {\n                      userTournamentUpdatedEx(tournamentId: $tournamentId) {\n                          userTournament {\n                              points\n                              position\n                              userId\n                              user {\n                              nickname\n                              }\n                          }\n                      }\n                  }",variables:{tournamentId:e.tournamentId},accessToken:this.currentUserInfo?.tokken}}))}))}async handleSubscriptionData(e){const t=e.payload?.data?.userTournamentUpdatedEx?.userTournament;t&&await this.updateTableData(t,e.id)}updateTableData(e,t){e.points>=this.getLowestPoints(t)&&this.updateTableBody(e,t),e.userId===this.currentUserInfo.id&&this.updateCurrentUserData(e,t)}updateRow(e,t,r){const n=e.querySelector(".leaderboard-row-nickname"),a=e.querySelector(".leaderboard-row-points"),o=e.querySelector(".leaderboard-row-position");n&&a&&o&&(o.textContent=t.position,n.textContent=maskUsername(t.user.nickname,t.user.userId,r),a.textContent=this.getPointsText(t.points),e.classList.toggle("champion",t.user.userId===r))}getMaxCount(e){for(const t of this.leaderboardsInfo)if(t.id===e)return t.count;return 1/0}updateTableBody(e,t){const r=this.leaderboardsData.get(t);if(!r||!r.usersData)return;const n=document.getElementById(`leaderboard-table-row-body-${t}`);if(!n)return;const a=this.getMaxCount(t);Math.min(n.children.length,a);let o=r.usersData.findIndex((t=>t.node.user.userId===e.userId));const s=this.getCurrentPositions(n),i=-1!==o?r.usersData[o].node.points:null;-1!==o?r.usersData[o].node.points=e.points:(r.usersData.length<a||e.points>(r.usersData[r.usersData.length-1]?.node.points||0))&&r.usersData.push({node:{points:e.points,position:0,user:{userId:e.userId,nickname:e.user?.nickname||"Player"}}}),r.usersData.sort(((e,t)=>t.node.points-e.node.points)),r.usersData.forEach(((e,t)=>e.node.position=t+1)),r.usersData=r.usersData.slice(0,a);const d=this.detectPositionChanges(s,r.usersData);d.length>0?this.handlePositionChanges(n,r.usersData,d):null!==i&&i!==e.points&&this.handlePointsUpdate(n,r.usersData,e.userId,i,e.points)}getCurrentPositions(e){const t={};return e.querySelectorAll(".leaderboard-table-row").forEach((e=>{const r=e.getAttribute("data-user-id"),n=e.querySelector(".leaderboard-row-position");r&&n&&(t[r]=parseInt(n.textContent))})),t}detectPositionChanges(e,t){const r=[];return t.forEach((t=>{const n=t.node.user.userId,a=e[n];a&&a!==t.node.position&&r.push({userId:n,oldPos:a,newPos:t.node.position})})),r}handlePointsUpdate(e,t,r,n,a){const o=e.querySelector(`[data-user-id="${r}"]`);if(!o)return;const s=o.querySelector(".leaderboard-row-points");if(s){const e=parseFloat(this.getPointsText(n).replace(/[^0-9.-]+/g,"")),t=parseFloat(this.getPointsText(a).replace(/[^0-9.-]+/g,""));isNaN(e)||isNaN(t)?(console.error("Invalid points values:",{oldPoints:n,newPoints:a,startValue:e,endValue:t}),s.textContent=this.getPointsText(a)):this.animateCounter(s,e,t,1e3)}const i=t.findIndex((e=>e.node.user.userId===r));-1!==i&&this.updateRow(o,t[i].node,this.currentUserInfo?.id)}handlePositionChanges(e,t,r){r.forEach((t=>{const r=e.querySelector(`[data-user-id="${t.userId}"]`);r&&r.classList.add("fade")})),setTimeout((()=>{t.forEach(((t,r)=>{let n=e.querySelector(`#leaderboard-table-row-body-${r+1}`);n&&(n.setAttribute("data-user-id",t.node.user.userId),this.updateRow(n,t.node,this.currentUserInfo?.id))})),r.forEach((t=>{const r=e.querySelector(`[data-user-id="${t.userId}"]`);r&&(r.classList.remove("fade"),r.classList.add("fade-restore"))})),setTimeout((()=>{r.forEach((t=>{const r=e.querySelector(`[data-user-id="${t.userId}"]`);r&&r.classList.remove("fade-restore")}))}),1e3)}),1e3)}updateCurrentUserData(e,t){const r=document.getElementById(`leaderboard-table-user-info-${t}`);if(!r)return;const n=r.querySelector(".leaderboard-row-points"),a=r.querySelector(".leaderboard-row-position"),o=r.querySelector(".leaderboard-row-reward");this.animateCounter(n,parseInt(this.getPointsText(n.textContent)),this.getPointsText(e.points)),this.animateCounter(a,parseInt(a.textContent),e.position);const s=this.leaderboardsData.get(t);let i=!1;if(s&&s.rewardsData){const t=s.rewardsData.length;if(e.position<=t){const t=e.position-1,n=s.rewardsData[t];o.textContent=this.getTablePrizeText(n)||"-",o.className=`leaderboard-row-reward ${this.getTablePrizeClassnames(n)}`,r.classList.contains("hide-user-info")&&r.classList.remove("hide-user-info"),i=!0}else r.classList.contains("hide-user-info")||r.classList.add("hide-user-info"),o.textContent="-",o.className="leaderboard-row-reward",i=!1}else r.classList.contains("hide-user-info")||r.classList.add("hide-user-info"),o.textContent="-",o.className="leaderboard-row-reward",i=!1;this.userData.set(t,{points:e.points,position:e.position,isWinner:i})}getLowestPoints(e){const t=this.leaderboardsData.get(e)?.usersData?.length-1;return this.leaderboardsData.get(e).usersData[t]?.node.points||0}animateCounter(e,t,r,n=500){if(!(e instanceof Element))return void console.error("Error: First argument must be a DOM element");const a=Number(t),o=Number(r),s=Number(n);if(isNaN(a)||isNaN(o)||s<=0)return console.error("Error: Invalid parameters:",{start:t,end:r,duration:n}),void(e.textContent=this.getPointsText(r));const i=o-a,d=Math.floor(s/16),l=i/d;let c=a,u=0;const h=setInterval((()=>{u++,c=a+l*u;const t=Math.round(c);e.textContent=this.getPointsText(t),u>=d&&(clearInterval(h),e.textContent=this.getPointsText(o))}),16)}async executeGraphQLQuery(e,t){let r;for(;;){const n=await fetch(`https://www.ambassadoribet.com/_internal/gql/?_${Date.now()}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:e,variables:t})});if(r=await n.json(),!r.errors||0===r.errors.length)break;await new Promise((e=>setTimeout(e,1e3)))}return r}drawTableHeaderButton(e,t){const r=this.displayDateRange(t?.startsAt,t?.endsAt),n=this.leaderboardsInfo.find((t=>t.id===e)),a=document.createElement("button");a.classList.add("leaderboard-header-button"),a.id=`leaderboard-button-${e}`,n?.buttonText?a.innerHTML=n?.buttonText:a.textContent=r;const o=new Date(t?.startsAt).getTime(),s=Array.from(this.leaderboardButtonsBox.children);let i=null;for(const e of s){const t=e.id.replace("leaderboard-button-",""),r=this.leaderboardsData.get(t);if(!r)continue;if(o<new Date(r?.startsAt).getTime()){i=e;break}}i?this.leaderboardButtonsBox.insertBefore(a,i):this.leaderboardButtonsBox.appendChild(a),a.addEventListener("click",(()=>this.toggleLeaderboardTable(e)))}displayDateRange(e,t){const r=new Date(e),n=new Date(t),a={ka:["იან","თებ","მარ","აპრ","მაი","ივნ","ივლ","აგვ","სექ","ოქტ","ნოე","დეკ"],tr:["Oca","Şub","Mar","Nis","May","Haz","Tem","Ağu","Eyl","Eki","Kas","Ara"],en:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],ru:["Янв","Фев","Мар","Апр","Май","Июн","Июл","Авг","Сен","Окт","Ноя","Дек"]},o=this.locale;if(isNaN(r.getTime())||isNaN(n.getTime()))return"Incorrect date";const s=r.getMonth(),i=n.getMonth();if(r.toDateString()===n.toDateString())return`${r.getDate()} ${a[o][s]}`;{const e=r.getDate(),t=n.getDate();return s===i?`${e} – ${t} ${a[o][s]}`:`${e} ${a[o][s]} – ${t} ${a[o][i]}`}}async drawLeaderboardHeader(){let e=`\n                  <div class="leaderboard-table-row" id="leaderboard-table-header-row">\n                      <div class="leaderboard-row-position">\n                          ${this.translationMap.position[this.locale]}\n                      </div>\n                      <div class="leaderboard-row-nickname">\n                          ${this.translationMap.users[this.locale]}\n                      </div>\n                      <div class="leaderboard-row-points">\n                          ${this.translationMap.points[this.locale]}\n                      </div>\n                      <div class="leaderboard-row-reward ">\n                          ${this.translationMap.prize[this.locale]}\n                      </div>\n                  </div>\n              `;this.leaderboardBody.innerHTML=e}drawLeaderboardBody(e,t,r){let n=this.leaderboardBody?.innerHTML&&"";n+=`<div class="leaderboard-table" id="leaderboard-table-${r}">`,n+=this.drawLeaderboardData(e,r),null!==this.currentUserInfo.id&&""!==this.currentUserInfo.id&&void 0!==this.currentUserInfo.id&&(n+=this.drawLeaderboardUserInfo(t,r)),n+="</div>",this.leaderboardBody.innerHTML+=n}getPointsText(e){if(null==e)return"-";if(0===e)return"0";let t=("string"==typeof e?e:e.toString()).split(".")[0],r="";for(let e=t.length-1,n=0;e>=0;e--)r=t[e]+r,n++,n%3==0&&e>0&&(r=" "+r);return r}drawLeaderboardData(e,t){let r=`<div class="leaderboard-table-row-body" id="leaderboard-table-row-body-${t}">`;for(let n=0;n<Math.max(e.rewardsData.length,e.usersData.length);n++){const a=e.usersData[n]?.node.user.userId||"";r+=`\n          <div class="leaderboard-table-row ${this.isCurrentUser(a,t)}" \n               id="leaderboard-table-row-body-${n+1}" \n               data-user-id="${a}">\n              <div class="leaderboard-row-position">\n                  ${e.usersData[n]?.node.position||"-"}\n              </div>\n              <div style="position: relative;text-align: start;padding-left: 25%;padding-right: 0;" class="leaderboard-row-nickname">\n                <img style="margin-right: 5px;transform: translateY(3px);" width="20px" height="20px" src="${e.usersData[n]?.node.user.avatarUri||"https://www.ambassadoribet.com/_internal/ts-images/5da2b4d5-59f6-412a-82c3-f6a272b532be/dev/e7db1252-8bcd-4699-b687-b66052c15cca/user-indicator.svg"}" class="leaderboard-row-avatar">\n                  ${maskUsername(e.usersData[n]?.node.user.nickname||"-",a,this.currentUserInfo.id)}\n              </div>\n              <div class="leaderboard-row-points">\n                  ${e.usersData[n]?.node.points?this.getPointsText(e.usersData[n]?.node.points):"-"}\n              </div>\n              <div class="leaderboard-row-reward ${this.getTablePrizeClassnames(e.rewardsData[n]?.action)}">\n                  ${this.getTablePrizeText(e.rewardsData[n]?.action)}\n              </div>\n          </div>\n      `}return r+="</div>",r}drawLeaderboardUserInfo(e,t){return`\n              <div class="user-info-container">\n                  <div class="leaderboard-table-user-info ${this.userData.get(t)?.isWinner?"hide-user-info":""}" id="leaderboard-table-user-info-${t}">\n                      <div class="leaderboard-row-position">\n                          ${e?.position||"-"}\n                      </div>\n                      <div style="position: relative;text-align: start;padding-left: 25%;padding-right: 0;" class="leaderboard-row-nickname">\n                           <img style="margin-right: 5px;transform: translateY(3px);" width="20px" height="20px" src="${this?.currentUserInfo?.avatarUri||"https://www.ambassadoribet.com/_internal/ts-images/5da2b4d5-59f6-412a-82c3-f6a272b532be/dev/e7db1252-8bcd-4699-b687-b66052c15cca/user-indicator.svg"}" class="leaderboard-row-avatar">\n                          ${this?.currentUserInfo?.nickname}\n                      </div>\n                      <div class="leaderboard-row-points">\n                          ${this.getPointsText(e?.points)||"-"}\n                      </div>\n                      <div class="leaderboard-row-reward ${this.getTablePrizeClassnames(this.leaderboardsData.get(t).rewardsData[e?.position-1]?.action)}">\n                          ${this.getTablePrizeText(this.leaderboardsData.get(t).rewardsData[e?.position-1]?.action)||"-"}\n                      </div>\n                  </div>\n              </div>\n              `}REWARD_TYPES={FREE_SPINS:"FREE_SPINS",FIXED:"FIXED",LP:"LPAB",LPFE:"LPABFE"};BOX_TYPES={LOOT_BOX:"LOOT_BOX",MYSTERY_BOX:"MYSTERY_BOX",WHEEL_OF_FORTUNE:"WHEEL_OF_FORTUNE"};toggleLeaderboardTable(e){const t=document.getElementById(`leaderboard-table-${e}`),r=document.getElementById(`leaderboard-button-${e}`),n=this.leaderboardButtonsBox;if(!t||!r||!n)return void console.error("Missing elements:",{table:t,button:r,parentBox:n});document.getElementById("inactiveComponentlBABBAOO")&&(document.getElementById("inactiveComponentlBABBAOO").remove(),document.getElementById("leaderboard-table-header-row").style.display=""),Array.from(this.leaderboardBody.children).forEach((e=>{e.classList.remove("active")})),Array.from(n.children).forEach((e=>{e.classList.remove("active")})),r.classList.add("active"),t.classList.add("active"),r.classList.add("active"),t.classList.add("active"),n.style.overflowX="auto";const a=r.getBoundingClientRect(),o=n.getBoundingClientRect(),s=r.offsetLeft-(o.width-a.width)/2;this.smoothScrollTo(n,s)}getTablePrizeClassnames(e){if(!e)return"table-prize";const t={[`${e?.bonus?.reward?.type===this.REWARD_TYPES.FREE_SPINS}`]:"table-prize-free-spins",[`${e?.bonus?.reward?.type===this.REWARD_TYPES.FIXED}`]:"table-prize-fixed",[`${Boolean(e?.title)}`]:e?.title?e?.title.trim().replace(/ /g,"_"):"",[`${e?.box?.type===this.BOX_TYPES.LOOT_BOX}`]:"table-prize-loot-box",[`${e?.box?.type===this.BOX_TYPES.MYSTERY_BOX}`]:"table-prize-mystery-box",[`${e?.box?.type===this.BOX_TYPES.WHEEL_OF_FORTUNE}`]:"table-prize-wheel-of-fortune"},r=["table-prize"];return Object.entries(t).forEach((([e,t])=>{"true"===e&&r.push(t)})),r.join(" ")}getTablePrizeText(e){if(!e)return"";const t={[`freespins-${Boolean(e?.bonus?.reward?.type===this.REWARD_TYPES.FREE_SPINS)}`]:()=>e?.bonus?.reward?.amount+' <img class="free-spins-icon" src="https://images.takeshape.io/5da2b4d5-59f6-412a-82c3-f6a272b532be/dev/bb35ec84-1583-40a4-9c84-2f0c3948e82b/slot-machine_1f3b0.png" loading="lazy">',[`fixed-${Boolean(e?.bonus?.reward?.type===this.REWARD_TYPES.FIXED)}`]:()=>e?.bonus?.reward?.amounts?.[0]?.value+" ₾",[`title-${Boolean(e?.currencyCode===this.REWARD_TYPES.LP)}`]:()=>`${e?.amount}<div class="${this.REWARD_TYPES.LP}"> </div`,[`title-${Boolean(e?.currencyCode===this.REWARD_TYPES.LPFE)}`]:()=>`${e?.amount}<div class="${this.REWARD_TYPES.LPFE}"> </div>`,[`title-${Boolean(e?.title)}`]:()=>"",[`lootbox-${Boolean(e?.box?.type===this.BOX_TYPES.LOOT_BOX)}`]:()=>"",[`mysterybox-${Boolean(e?.box?.type===this.BOX_TYPES.MYSTERY_BOX)}`]:()=>"",[`wheeloffortune-${Boolean(e?.box?.type===this.BOX_TYPES.WHEEL_OF_FORTUNE)}`]:()=>""};for(const[e,r]of Object.entries(t))if(e.endsWith("-true"))return r()||"";return""}translationMap={position:{en:"#",ru:"#",ka:"#",tr:"#"},points:{en:"Points",ru:"Очки",ka:"ქულები",tr:"Puanlar"},prize:{en:"Prize",ru:"Приз",ka:"პრიზი",tr:"Ödül"},users:{en:"Users",ru:"Польз.",ka:"მომხ.",tr:"Kullanıcılar"}};setLoading(e){this.loading=e,e||(this.leaderboardTable.style.display="block",this.parrentElement.getElementsByClassName("mat-loader")[0].style.display="none")}isCurrentUser(e,t){return null===this.currentUserInfo.id||""===this.currentUserInfo.id||void 0===this.currentUserInfo.id||null===e||""===e||void 0===e?"":this.currentUserInfo.id===e?(this.userData.get(t).isWinner=!0,"champion"):""}updateLeaderboards(){const e=new Date;let t=!1,r=null,n=-1,a=null;if(this.leaderboardsData.forEach(((o,s)=>{const i=new Date(o.startsAt),d=new Date(o.endsAt);if(e>=i&&e<=d){if(!t){document.getElementById(`leaderboard-table-${s}`).classList?.add("active");const e=document.getElementById(`leaderboard-button-${s}`);e.classList?.add("active"),t=!0,a=e}}else document.getElementById(`leaderboard-table-${s}`).classList.add("inactive"),(!r||d>r)&&(r=d,n=s)})),!t&&r<e){document.getElementById(`leaderboard-table-${n}`).classList.add("active");const e=document.getElementById(`leaderboard-button-${n}`);e.classList.add("active"),a=e}if(a&&this.leaderboardButtonsBox){const e=a.offsetLeft,t=a.offsetWidth,r=e-this.leaderboardButtonsBox.offsetWidth/2+t/2;this.smoothScrollTo(this.leaderboardButtonsBox,r)}else if(!a){const e=document.createElement("div");e.id="inactiveComponentlBABBAOO",e.innerHTML=this.outComponent[this.locale],document.getElementById("leaderboard-table-header-row").style.display="none",this.leaderboardBody.appendChild(e)}}makeElementDraggable(e,t={}){if(!(e&&e instanceof HTMLElement))return void console.error("Invalid element provided to makeElementDraggable");const r={speedMultiplier:t.speedMultiplier||1.5,enableTouch:!1!==t.enableTouch,dragCursor:t.dragCursor||"grabbing"};let n,a,o,s,i,d=!1;const l=getComputedStyle(e).cursor||"auto";"auto"!==l||e.style.cursor||(e.style.cursor="grab");const c=(t,r)=>{e.addEventListener(t,r,{passive:!1})};c("mousedown",(t=>{d=!0,e.style.cursor=r.dragCursor,i=e.getBoundingClientRect(),n=t.clientX-i.left,a=t.clientY-i.top,o=e.scrollLeft,s=e.scrollTop,t.preventDefault()}));const u=()=>{d&&(d=!1,e.style.cursor=l||"grab")};return c("mouseleave",u),c("mouseup",u),c("mousemove",(t=>{if(!d)return;t.preventDefault();const l=t.clientX-i.left,c=t.clientY-i.top,u=(l-n)*r.speedMultiplier,h=(c-a)*r.speedMultiplier;e.scrollLeft=o-u,e.scrollTop=s-h})),r.enableTouch&&(c("touchstart",(t=>{1===t.touches.length&&(d=!0,i=e.getBoundingClientRect(),n=t.touches[0].clientX-i.left,a=t.touches[0].clientY-i.top,o=e.scrollLeft,s=e.scrollTop)})),c("touchend",u),c("touchcancel",u),c("touchmove",(t=>{if(!d||1!==t.touches.length)return;t.preventDefault();const l=t.touches[0].clientX-i.left,c=t.touches[0].clientY-i.top,u=(l-n)*r.speedMultiplier,h=(c-a)*r.speedMultiplier;e.scrollLeft=o-u,e.scrollTop=s-h}))),{destroy:()=>{const t=["mousedown","mouseleave","mouseup","mousemove"];r.enableTouch&&t.push("touchstart","touchend","touchcancel","touchmove"),t.forEach((t=>{e.removeEventListener(t,null,{passive:!1})})),e.style.cursor=l}}}}